@model FIT5032_Assignment.Models.Entites.Clinic

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
@if (TempData["SuccessUpolad"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessUpolad"]
    </div>
}




<div>
    <h1>@Model.ClinicName</h1>
    <p>Address: @Model.Address</p>
</div>
<hr>

<div class="table-container pb-3 mb-3">
    <table class="table w-100 " id="patient-appointment-table">
        <thead>
            <tr>
                <th id="selectAllArea">
                    All Email
                    <input type="checkbox" id="selectAll" />
                </th>
                <th>Appointment Date</th>
                <th>Start Time</th>
                <th>Title</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Phone Number</th>
                <th>Email</th>
                <th>Gender</th>
                <th>Birthday</th>
                <th>IsConfirmed</th>
                <th>Note</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>

            </tr>
        </thead>

        <tbody>
            @foreach (var appointment in Model.Appointments)
            {
                <tr class="border-1 border shadow-sm border-end border-start-0 border-bottom border-top">
                    <td class="eachemail">
                        <input type="checkbox" name="selectedEmails" value="@appointment.Email" class="emailCheckbox" />
                    </td>
                    <td>@appointment.AppointmentDate.ToShortDateString()</td>
                    <td>@appointment.StartTime.ToShortTimeString()</td>
                    <td>@appointment.Title</td>
                    <td>@appointment.FirstName</td>
                    <td>@appointment.LastName</td>
                    <td>@appointment.PhoneNumber</td>
                    <td>@appointment.Email</td>
                    <td>@appointment.Gender</td>
                    <td>@appointment.Birthday.ToShortDateString()</td>
                    <td>@(appointment.IsConfirmed ? "Yes" : "No")</td>

                    <td>@appointment.Note</td>
                    <td>
                        @Html.ActionLink("Details", "PatientAppointmentDetails", new { id = appointment.AppointmentId }, new { @class = "" })
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Appointments", new { id = appointment.AppointmentId }, new { @class = "" })
                    </td>
                    <td>
                        @Html.ActionLink("Upload File", "Create", "Images", new { id = appointment.AppointmentId }, null)
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", "Appointments", new { id = appointment.AppointmentId }, null)
                    </td>


                </tr>
            }
        </tbody>
    </table>
</div>

@if (TempData["SuccessExport"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessExport"]
    </div>
}
<div class="tab">
    <button class="tablinks fw-bold" data-city="London" id="defaultOpen">Send Email</button>
    <button class="tablinks fw-bold" data-city="Paris">Chart</button>
</div>

<!-- Tab content -->
<div id="London" class="tabcontent">
    <span class="close-tab">x</span>
    @Html.Partial("EmialComponent", new FIT5032_Assignment.Models.EmailViewModel())
</div>

<div id="Paris" class="tabcontent container">
    <span class="close-tab row">x</span>
    <div class="row">
        <div id="chartContainer" class="col-8" style="height: 370px;width:50%"></div>
        <div class="col-4">
            @Html.ActionLink("Export to CSV", "ExportAppointmentsToCSV", null, new { @class = "btn btn-primary" })
            @Html.ActionLink("Export to PDF", "ExportAppointmentsToPDF", null, new { @class = "btn btn-primary" })
        </div>

    </div>


</div>




@section Scripts {
    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>
    <script>
        $(document).ready(function () {
            $('#email-Contents').css('visibility', 'visible');
            tinymce.init({
                selector: '#email-Contents',
                toolbar: 'undo redo | styles | fontfamily |bold italic forecolor | link image emoticons | align | mergetags inserttemplate | spellcheckdialog a11ycheck | code removeformat',
                menubar: false,
                images_file_types: "jpeg,jpg,png,gif",
                style_formats: [
                    { title: 'Paragraph', format: 'p' },
                    { title: 'Heading 1', format: 'h1' },
                    { title: 'Heading 2', format: 'h2' },
                    { title: 'Large text', format: 'largetext' },
                    { title: 'Button styles' },
                    { title: 'Call-to-action', format: 'calltoaction' },
                ],
            });
        });

        //chart start
        window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                theme: "light2",
                animationEnabled: true,
                title: {
                    text: "Appointments in the Current Month"
                },
                axisX: {
                    title: "Days of the Current Month",
                    interval: 1,
                    valueFormatString: "#", // Format as integer
                    labelFormatter: function (e) {
                        return e.value;  // Returns the day number directly
                    }
                },
                axisY: {
                    title: "Number of Appointments",
                    interval: 1
                },
				data: [
				{
					type: "column",
					dataPoints: @Html.Raw(ViewBag.DataPoints),
				}
				]
            }
            );
            chart.render();
        };




        //chart end


        //select emial start
        function updateEmailTextbox() {
            var selectedEmailsSet = new Set(); // Initialize a set for unique values

            $('.emailCheckbox:checked').each(function () {
                selectedEmailsSet.add($(this).val()); // Add email to the set
            });

            $('#Useremail').val(Array.from(selectedEmailsSet).join(';'));
        }


        $('#selectAll').on('change', function () {
            var isChecked = $(this).is(':checked');
            $('.emailCheckbox').prop('checked', isChecked);
            updateEmailTextbox();
        });

        $('.emailCheckbox').on('change', function () {
            var totalCheckboxes = $('.emailCheckbox').length;
            var checkedCheckboxes = $('.emailCheckbox:checked').length;

            $('#selectAll').prop('checked', totalCheckboxes === checkedCheckboxes);
            updateEmailTextbox();
        });


        $('.send-email').on('click', function () {
            $('#email-area').show();
            $('#selectAllArea').show();
            $('.eachemail').show();

            updateEmailTextbox();
        });


        //select emial end


        //rich text start

        //rich text end

        //tabs start
        $("#defaultOpen").click();

        $(".tablinks").click(function (evt) {
            // Hide all elements with class="tabcontent"
            $(".tabcontent").hide();

            // Remove "active" class from all elements with class="tablinks"
            $(".tablinks").removeClass("active");

            // Show the current tab, and add an "active" class to the button that opened the tab
            var cityName = $(this).attr("data-city");
            $("#" + cityName).show();
            $(this).addClass("active");
        });
        $(".close-tab").click(function () {
            $(this).parent().hide();
        });

        //tabs end

        //datatable start
        $('#patient-appointment-table').DataTable({
            responsive: true,
            pageLength: 10,
            lengthChange: false,
            columnDefs: [
                { orderable: false, targets: [0, 12, 13, 14, 15] }
            ]
        });

        //datatable end

    </script>
    <style>

        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

            .tab::after {
                content: "";
                display: table;
                clear: both;
            }



            /* Style the buttons that are used to open the tab content */
            .tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
                width: 50%;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                .tab button.active {
                    background-color: #ccc;
                }

        .tabcontent span {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
        }

        #chartContainer {
            min-height: 450px;
            overflow-y: auto;
        }


        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 20px 20px;
            border: 1px solid #ccc;
            border-top: none;
        }

        .table-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .table {
            margin-left: auto;
            margin-right: auto;
        }
    </style>
}